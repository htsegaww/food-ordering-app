// cartpage

// "use client";
// import { CartContext, cartProductPrice } from "@/components/AppContext";
// import SectionHeaders from "@/components/layout/SectionHeaders";
// import { useContext } from "react";
// import { Button } from "@/components/ui/button";
// import CartProduct from "@/components/menu/CartProduct";
// import toast from "react-hot-toast";
// import { useState, useEffect } from "react";
// import useProfile from "@/components/useProfile";
// import AddressInputs from "@/components/layout/AddressInputs";

// interface Address {
//   phone: string;
//   streetAddress: string;
//   city: string;
//   postalCode: string;
//   country: string;
// }

// interface ProfileData {
//   phone?: string;
//   streetAddress?: string;
//   city?: string;
//   postalCode?: string;
//   country?: string;
// }

// export default function CartPage() {
//   const { cartProducts, removeCartProduct } = useContext(CartContext) ?? {};
//   const [address, setAddress] = useState<Address | Partial<Address>>({});
//   const { data: profileData } = useProfile();

//   useEffect(() => {
//     if (
//       typeof window !== "undefined" &&
//       window.location.href.includes("canceled=1")
//     ) {
//       toast.error("Payment failed ðŸ˜”");
//     }
//   }, []);

//   useEffect(() => {
//     if (profileData?.city) {
//       const { phone, streetAddress, city, postalCode, country } =
//         profileData as ProfileData;
//       const addressFromProfile: Address = {
//         phone: phone || "",
//         streetAddress: streetAddress || "",
//         city: city || "",
//         postalCode: postalCode || "",
//         country: country || "",
//       };
//       setAddress(addressFromProfile);
//     }
//   }, [profileData]);

//   let subtotal = 0;
//   if (cartProducts) {
//     for (const p of cartProducts) {
//       subtotal += cartProductPrice(p);
//     }
//   }

//   function handleAddressChange(propName: keyof Address, value: string) {
//     setAddress((prevAddress) => ({ ...prevAddress, [propName]: value }));
//   }

//   async function proceedToCheckout(ev: React.FormEvent<HTMLFormElement>) {
//     ev.preventDefault();

//     const promise = new Promise((resolve, reject) => {
//       fetch("/api/checkout", {
//         method: "POST",
//         headers: { "Content-Type": "application/json" },
//         body: JSON.stringify({
//           address,
//           cartProducts,
//         }),
//       }).then(async (response) => {
//         if (response.ok) {
//           const data = await response.json();
//           resolve(response);
//           window.location.href = data.url; // Assuming the response contains a URL
//         } else {
//           reject();
//         }
//       });
//     });

//     await toast.promise(promise, {
//       loading: "Preparing your order...",
//       success: "Redirecting to payment...",
//       error: "Something went wrong... Please try again later",
//     });
//   }

//   if (!cartProducts || cartProducts.length === 0) {
//     return (
//       <section className="mt-8 text-center">
//         <SectionHeaders mainHeader="Cart" subHeader="" />
//         <p className="mt-4">Your shopping cart is empty ðŸ˜”</p>
//       </section>
//     );
//   }

//   return (
//     <section className="mt-8">
//       <div className="text-center">
//         <SectionHeaders mainHeader="Checkout" subHeader="" />
//       </div>

//       <div className="mt-8 grid gap-8 grid-cols-2">
//         <div>
//           {cartProducts.length === 0 && (
//             <div>No products in your shopping cart</div>
//           )}
//           {cartProducts.length > 0 &&
//             cartProducts.map((product, index) => (
//               <CartProduct
//                 key={index}
//                 product={product}
//                 onRemove={() => removeCartProduct && removeCartProduct(index)}
//               />
//             ))}
//           <div className="py-2 pr-16 flex justify-end items-center">
//             <div className="text-gray-500">
//               Subtotal:
//               <br />
//               Delivery:
//               <br />
//               Total:
//             </div>
//             <div className="font-semibold pl-2 text-right">
//               ${subtotal}
//               <br />
//               $5
//               <br />${subtotal + 5}
//             </div>
//           </div>
//         </div>
//         <div className="bg-gray-100 p-4 rounded-lg">
//           <h2>Checkout</h2>
//           <form onSubmit={proceedToCheckout}>
//             <AddressInputs
//               addressProps={address}
//               setAddressProp={handleAddressChange}
//             />
//             <Button type="submit" className="bg-primary text-white">
//               Pay ${subtotal + 5}
//             </Button>
//           </form>
//         </div>
//       </div>
//     </section>
//   );
// }
